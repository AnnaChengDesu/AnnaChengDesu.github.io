<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ES6 on Anna.me</title>
    <link>https://annachengdesu.github.io/tags/es6/</link>
    <description>Recent content in ES6 on Anna.me</description>
    <image>
      <title>Anna.me</title>
      <url>https://annachengdesu.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://annachengdesu.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Sep 2023 20:11:25 +0800</lastBuildDate><atom:link href="https://annachengdesu.github.io/tags/es6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>箭头函数和普通函数的区别及不适用的场景</title>
      <link>https://annachengdesu.github.io/post/javascript/arrow-function/</link>
      <pubDate>Sun, 03 Sep 2023 20:11:25 +0800</pubDate>
      
      <guid>https://annachengdesu.github.io/post/javascript/arrow-function/</guid>
      <description>箭头函数不绑定 arguments，可以使用 ...args 代替 箭头函数没有 prototype 属性，不能进行 new 实例化 箭头函数不能通过 call、apply 等绑定 this，因为箭头函数底层是使用bind永久绑定this了，bind绑定过的this不能修改 箭头函数的this指向创建时父级的this 箭头函数不能使用yield关键字，不能作为Generator函数 const fn1 = () =&amp;gt; { // 箭头函数中没有arguments console.log(&amp;#34;arguments&amp;#34;, arguments); }; fn1(100, 300); const fn2 = () =&amp;gt; { // 这里的this指向window，箭头函数的this指向创建时父级的this console.log(&amp;#34;this&amp;#34;, this); }; // 箭头函数不能修改this fn2.call({ x: 100 }); const obj = { name: &amp;#34;poetry&amp;#34;, getName2() { // 这里的this指向obj return () =&amp;gt; { // 这里的this指向obj return this.name; }; }, getName: () =&amp;gt; { // 1、不适用箭头函数的场景1：对象方法 // 这里不能使用箭头函数，否则箭头函数指向window return this.</description>
    </item>
    
  </channel>
</rss>
